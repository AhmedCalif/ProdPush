/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedTasksImport } from './routes/_authenticated/tasks'
import { Route as AuthenticatedProjectsImport } from './routes/_authenticated/projects'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedProjectIdImport } from './routes/_authenticated/project/$id'

// Create Virtual Routes

const AuthenticatedIndexLazyImport = createFileRoute('/_authenticated/')()

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexLazyRoute = AuthenticatedIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/index.lazy').then((d) => d.Route),
)

const AuthenticatedTasksRoute = AuthenticatedTasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProjectsRoute = AuthenticatedProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProjectIdRoute = AuthenticatedProjectIdImport.update({
  id: '/project/$id',
  path: '/project/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/projects': {
      id: '/_authenticated/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AuthenticatedProjectsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/tasks': {
      id: '/_authenticated/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/project/$id': {
      id: '/_authenticated/project/$id'
      path: '/project/$id'
      fullPath: '/project/$id'
      preLoaderRoute: typeof AuthenticatedProjectIdImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedProjectsRoute: typeof AuthenticatedProjectsRoute
  AuthenticatedTasksRoute: typeof AuthenticatedTasksRoute
  AuthenticatedIndexLazyRoute: typeof AuthenticatedIndexLazyRoute
  AuthenticatedProjectIdRoute: typeof AuthenticatedProjectIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedProjectsRoute: AuthenticatedProjectsRoute,
  AuthenticatedTasksRoute: AuthenticatedTasksRoute,
  AuthenticatedIndexLazyRoute: AuthenticatedIndexLazyRoute,
  AuthenticatedProjectIdRoute: AuthenticatedProjectIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/profile': typeof AuthenticatedProfileRoute
  '/projects': typeof AuthenticatedProjectsRoute
  '/tasks': typeof AuthenticatedTasksRoute
  '/': typeof AuthenticatedIndexLazyRoute
  '/project/$id': typeof AuthenticatedProjectIdRoute
}

export interface FileRoutesByTo {
  '/profile': typeof AuthenticatedProfileRoute
  '/projects': typeof AuthenticatedProjectsRoute
  '/tasks': typeof AuthenticatedTasksRoute
  '/': typeof AuthenticatedIndexLazyRoute
  '/project/$id': typeof AuthenticatedProjectIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/projects': typeof AuthenticatedProjectsRoute
  '/_authenticated/tasks': typeof AuthenticatedTasksRoute
  '/_authenticated/': typeof AuthenticatedIndexLazyRoute
  '/_authenticated/project/$id': typeof AuthenticatedProjectIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/profile' | '/projects' | '/tasks' | '/' | '/project/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/profile' | '/projects' | '/tasks' | '/' | '/project/$id'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/profile'
    | '/_authenticated/projects'
    | '/_authenticated/tasks'
    | '/_authenticated/'
    | '/_authenticated/project/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/profile",
        "/_authenticated/projects",
        "/_authenticated/tasks",
        "/_authenticated/",
        "/_authenticated/project/$id"
      ]
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/projects": {
      "filePath": "_authenticated/projects.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/tasks": {
      "filePath": "_authenticated/tasks.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/project/$id": {
      "filePath": "_authenticated/project/$id.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
